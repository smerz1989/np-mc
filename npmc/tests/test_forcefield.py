import os,sys
#sys.path.insert(0,os.path.abspath('../src'))

import npmc.forcefield_class as ffc
import numpy as np
import unittest
import pickle
from math import *
import sys

script_path = os.path.dirname(os.path.realpath(__file__))

class TestDihedralForceField(unittest.TestCase):
    def setUp(self):
        self.longMessage=True
        self.dih4_params = pickle.load(open(script_path+"/test_files/forcefield_tests/dihedral_type4_params.pickle",'rb'))
        self.dih4_ff_output = pickle.load(open(script_path+'/test_files/forcefield_tests/dihedral_type4_ff_function_output.pickle','rb'))
        self.dih_coeffs = pickle.load(open(script_path+'/test_files/forcefield_tests/dihedral_coefficients.pickle','rb'))
        self.two_meoh_params = pickle.load(open(script_path+'/test_files/forcefield_tests/dihedral_forcefields_parameters.pickle','rb'))
        self.dihedral_4_pdf = pickle.load(open(script_path+'/test_files/forcefield_tests/dihedral_type4_pdf.pickle','rb'))
        self.two_meoh_settings_file = script_path+'/test_files/forcefield_tests/lt_files/two_meohs/system.in.settings'
        

    def test_get_ff_params_returns_correct_dihedral_forcefield_type(self):
        self.assertEqual(ffc.get_ff_params(self.two_meoh_settings_file,4,'dihedral')[0],self.dih4_params[0],msg="The get_ff_params function of the forcefield class does not return the expected dihedral forcefield type")

    def test_get_ff_params_returns_correct_dihedral_parameters(self):
        self.assertEqual(ffc.get_ff_params(self.two_meoh_settings_file,4,'dihedral')[1],self.dih4_params[1],msg="The get_ff_params function of the forcefield class does not return the expected dihedral parameters from the given settings file")

    def test_get_ff_function_returns_correct_forcefield_function(self):
        ff_function = ffc.get_ff_function(self.two_meoh_settings_file,4,'dihedral')
        thetas = np.linspace(0,2*pi,num=100)
        test_result = np.array([ff_function(theta) for theta in thetas])
        np.testing.assert_array_almost_equal(test_result,self.dih4_ff_output,decimal=6,err_msg="The output of the returned function of get_ff_function does not correspond to the expected results.")

    def test_read_ff_coeffs_return_correct_coeffs_from_settings_file(self):
        self.assertListEqual(ffc.read_ff_coeffs(self.two_meoh_settings_file,'dihedral'),self.dih_coeffs,msg="The list of coefficients returned by read_ff_coeffs does not return the expected coefficients from the given settings file.")

    def test_initialize_dihedral_returns_expected_DihedralForceField_objects(self):
        dihedral_ffs = ffc.initialize_dihedral_ffs(self.two_meoh_settings_file)
        ffs_params = [ff.ff_parameters for ff in dihedral_ffs]
        self.assertListEqual(ffs_params,self.two_meoh_params,msg="The parameters in the DihedralForceField objects returned by initialize_dihedral does not match the ones sepcified in the settings file.")

    def test_get_pdf_for_CCOH_dihedral_forcefield_returns_expected_cdf(self):
        ff = ffc.DihedralForceField(self.two_meoh_settings_file,4)
        np.testing.assert_array_almost_equal(ff.get_pdf(298.15)[1],self.dihedral_4_pdf,decimal=6,err_msg="The pdf generated by the DihedralForceField object does not return the expected pdf for a CCOH opls dihedral force field.")
